pack:
  namespace: ""

charts:
  k8s-triliovault-operator:
    # Default values for k8s-triliovault-operator.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # Configuration values for optional preflight validation
    # See: https://docs.trilio.io/kubernetes/getting-started-3/getting-started/install-and-configure/upstream-kubernetes#tvk-quickstart-preflight-configuration-defaults
    preflight:
      enabled: false
      repository: preflight
      logLevel: "INFO"
      cleanupOnFailure: false
      imagePullSecret: ""
      limits: ""
      localRegistry: ""
      nodeSelector: ""
      pvcStorageRequest: ""
      requests: ""
      storageClass: ""
      volumeSnapshotClass: ""

    # Prefix override for all names and labels for k8s-triliovault-operator resources
    nameOverride: ""

    # Private Helm repo details
    tvkHelmRepo: ""
    tls:
      secretName: "helm-client-certs"
      verify: false
      enable: false
      keyFile: "tls.key"
      certFile: "tls.crt"
      caContent: ""
      hostname: ""

    # Operator behaviour configuration
    installTVK:
      enabled: true
      # Scope of TVK application created. One of: [Cluster, Namespaced]
      applicationScope: Cluster
      # If applicationScope == Namespaced, restoreNamespaces is required
      # restoreNamespaces: ["kube-system", "default", "restore-namespace"]
      tvkInstanceName: ""
      ingressConfig:
        host: ""                 # Host of the ingress resource created
        tlsSecretName: ""        # TLS secret name containing ingress cert & key
        annotations: {}          # Annotations to be added on ingress resource
        ingressClass: ""         # Ingress class name for the ingress resource
      ComponentConfiguration:
        ingressController:
          enabled: true          # Whether or not to deploy TVK ingress controller
          service:
            # TVK ingress controller service type. One of: [LoadBalancer, NodePort]
            type: LoadBalancer

    observability:
      enabled: false
      logging:
        loki:
          enabled: true
        promtail:
          enabled: true
      monitoring:
        prometheus:
          enabled: true
          server:
            enabled: true
          kubeStateMetrics:
            enabled: false
          nodeExporter:
            enabled: false
          pushgateway:
            enabled: false
          alertmanager:
            enabled: false
      visualization:
        grafana:
          enabled: true

    # Deployment configuration
    replicaCount: 1

    image:
      pullPolicy: Always
    registry: "eu.gcr.io/amazing-chalice-243510"
    tag: "2.9.1"

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64

    # Use when installing the TVK operator in proxy enabled environments.
    # TVM will pick up these settings and leverage them directly for operations.
    # See: https://docs.trilio.io/kubernetes/getting-started-3/getting-started/install-and-configure/upstream-kubernetes#proxy-enabled-environments
    proxySettings:
      PROXY_ENABLED: false
      NO_PROXY: ""
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      CA_BUNDLE_CONFIGMAP: ""

    podSpec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001

    securityContext:
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 1001
      capabilities:
        drop:
          - ALL

    # TVK Helm chart constants
    operator-webhook-init:
      repository: "operator-webhook-init"
    k8s-triliovault-operator:
      repository: "k8s-triliovault-operator"